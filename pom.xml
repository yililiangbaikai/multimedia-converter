<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.bingo</groupId>
  <artifactId>multimedia-converter</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <packaging>jar</packaging>

  <name>multimedia-converter</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  	<dependencies>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.41</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.1.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
		    <groupId>commons-codec</groupId>
		    <artifactId>commons-codec</artifactId>
		    <version>1.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.3.4</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
			<version>2.5</version>
		</dependency>
		<dependency>
			<artifactId>aspectjweaver</artifactId>
			<groupId>org.aspectj</groupId>
			<version>1.8.4</version>
		</dependency>
		<dependency>
		    <groupId>org.openoffice</groupId>
		    <artifactId>juh</artifactId>
		    <version>3.1.0</version>
		</dependency>
		<dependency>
		    <groupId>org.openoffice</groupId>
		    <artifactId>unoil</artifactId>
		    <version>3.1.0</version>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-jdk14</artifactId>
		    <version>1.7.12</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>2.8.5</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.8.5</version>
		</dependency>
		<dependency>
		    <groupId>org.jsoup</groupId>
		    <artifactId>jsoup</artifactId>
		    <version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<!-- 微信api  -->
		<dependency>
		  <groupId>com.github.liyiorg</groupId>
		  <artifactId>weixin-popular</artifactId>
		  <version>2.8.8</version>
		</dependency>
		<!-- <dependency>
		    <groupId>org.jasig.cas.client</groupId>
		    <artifactId>cas-client-core</artifactId>
		    <version>3.2.1</version>
		</dependency> -->
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArguments>
			            <verbose />
			            <extdirs>${project.basedir}/src/main/webapp/WEB-INF/lib</extdirs>
			        </compilerArguments>
				</configuration>
			</plugin>
			<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-surefire-plugin</artifactId>
	            <configuration>
                    <skip>true</skip> <!-- 略过单元测试 --> 
                    <testFailureIgnore>true</testFailureIgnore> <!-- 当Maven 遇到一个测试失败，它默认的行为是停止当前的构建。 如果你希望继续构建项目，即使 Surefire 插件遇到了失败的单元测试，你就需要设置 Surefire 的testFailureIgnore 这个配置属性为 true-->
                </configuration>
	            <version>2.17</version>
	        </plugin>
		    <!-- 方法一打包jar但是依赖的jar吧不会同时打包到运行的jar而是放到target/lib -->
			 <!-- <plugin>  
		            <groupId>org.apache.maven.plugins</groupId>  
		            <artifactId>maven-jar-plugin</artifactId>  
		            <version>2.6</version>  
		            <configuration>  
		                <archive>  
		                    <manifest>  
		                        <addClasspath>true</addClasspath>  
		                        <classpathPrefix>lib/</classpathPrefix>  
		                        <mainClass>com.bingo.multimediaconverter.service.FfmpegVideoConverter</mainClass>  
		                    </manifest>  
		                </archive>  
		            </configuration>  
		        </plugin>  
		        <plugin>  
		            <groupId>org.apache.maven.plugins</groupId>  
		            <artifactId>maven-dependency-plugin</artifactId>  
		            <version>2.10</version>  
		            <executions>  
		                <execution>  
		                    <id>copy-dependencies</id>  
		                    <phase>package</phase>  
		                    <goals>  
		                        <goal>copy-dependencies</goal>  
		                    </goals>  
		                    <configuration>  
		                        <outputDirectory>${project.build.directory}/lib</outputDirectory>  
		                    </configuration>  
		                </execution>  
		            </executions>  
		        </plugin> -->
		        <!-- 方法二打包jar并包含所有lib -->
		        <plugin>  
		            <groupId>org.apache.maven.plugins</groupId>  
		            <artifactId>maven-assembly-plugin</artifactId>  
		            <version>2.5.5</version>  
		            <configuration>  
		                <archive>  
		                    <manifest>  
		                        <mainClass>com.bingo.multimediaconverter.service.FfmpegVideoConverter</mainClass>  
		                    </manifest>  
		                </archive>  
		                <descriptorRefs>  
		                    <descriptorRef>jar-with-dependencies</descriptorRef>  
		                </descriptorRefs>  
		            </configuration>  
		            <executions>  
		                <execution>  
		                    <id>make-assembly</id>  
		                    <phase>package</phase>  
		                    <goals>  
		                        <goal>single</goal>  
		                    </goals>  
		                </execution>  
		            </executions>  
		        </plugin>  
		        <!-- 项目资源插件 -->
	            <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-resources-plugin</artifactId>
	                <version>2.6</version>
	                <executions>
	                    <execution>
	                        <id>copy-resources</id>
	                        <phase>package</phase>
	                        <goals>
	                            <goal>copy-resources</goal>
	                        </goals>
	                        <configuration>
	                            <encoding>UTF-8</encoding>
	                            <!-- 拷贝项目src/main/resources/下，除.bat以外的所有文件到conf/目录下 -->
	                            <outputDirectory>${project.build.directory}/conf</outputDirectory>
	                            <resources>
	                                <resource>
	                                    <directory>src/main/resources/</directory>
	                                    <filtering>true</filtering>
	                                    <excludes>
	                                        <exclude>*.bat</exclude>
	                                    </excludes>
	                                </resource>
	                            </resources>
	                        </configuration>
	                    </execution>
	                    <execution>
	                        <id>copy-command</id>
	                        <phase>package</phase>
	                        <goals>
	                            <goal>copy-resources</goal>
	                        </goals>
	                        <configuration>
	                            <encoding>UTF-8</encoding>
	                            <!-- 只拷贝项目src/main/resources/目录下的.bat文件到输出目录下 -->
	                            <outputDirectory>${project.build.directory}</outputDirectory>
	                            <resources>
	                                <resource>
	                                    <directory>src/main/resources/</directory>
	                                    <filtering>true</filtering>
	                                    <includes>
	                                        <include>*.bat</include>
	                                    </includes>
	                                </resource>
	                            </resources>
	                        </configuration>
	                    </execution>
	                </executions>
	            </plugin>
		</plugins>
	</build>
</project>